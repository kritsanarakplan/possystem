generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String
  price       Float
  owner       String
  shelf       Boolean      @default(false)
  storeStocks StoreStock[]
  saleItems   SaleItem[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Store {
  id          Int          @id @default(autoincrement())
  name        String
  storeStocks StoreStock[]
  sales       Sale[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model StoreStock {
  id        Int      @id @default(autoincrement())
  store     Store    @relation(fields: [storeId], references: [id])
  storeId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  stock     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([storeId, productId])
}

model Sale {
  id        Int        @id @default(autoincrement())
  store     Store      @relation(fields: [storeId], references: [id])
  storeId   Int
  total     Float
  date      DateTime   @default(now())
  items     SaleItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model SaleItem {
  id        Int      @id @default(autoincrement())
  sale      Sale     @relation(fields: [saleId], references: [id])
  saleId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Expense {
  id           Int             @id @default(autoincrement())
  name         String?
  description  String?
  date         DateTime        @default(now())
  amount       Float
  category     ExpenseCategory? @relation(fields: [categoryId], references: [id])
  categoryId   Int?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
}

model ExpenseCategory {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  expenses    Expense[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
